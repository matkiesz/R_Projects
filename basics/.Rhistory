data("cars")
?cars
head(cars)
data("mtcars")
?cars
head(cars)
head(mtcars)
str(mtcars)
View(mtcars)
x<- mtcars[1:5]
y<- mtcars[6:11]
cor(x,y)
x<- mtcars[1:11]
cor(x)
View(mtcars)
View(mtcars)
t.test(x)
outer(
1:ncol(mtcars), 1:ncol(mtcars),
Vectorize(
function (i,j) t.test(Data[,i], Data[,j])$p.value
)
)
ks.test(x)
ks.test(x,y)
x<- mtcars[1:5]
ks.test(x,y)
View(mtcars)
hist(disp)
hist[4]
hist[,4]
hist[,10]
t.test(x = mpg, y = am)
t.test(x = mpg, mu = 20)
t.test(mtcars,x = mpg, mu = 20)
t.test(data = mtcars,mpg~am)
unique(mtcars)
unique(col(mtcars))
X <- rnorm(n=50, mean = 10, sd = 5)
Y <- rnorm(n=50, mean = 15, sd = 6)
Z <- rnorm(n=50, mean = 20, sd = 5)
Data <- data.frame(X, Y, Z)
library(plyr)
combos <- combn(ncol(Data),2)
adply(combos, 2, function(x) {
test <- t.test(Data[, x[1]], Data[, x[2]])
out <- data.frame("var1" = colnames(Data)[x[1]]
, "var2" = colnames(Data[x[2]])
, "t.value" = sprintf("%.3f", test$statistic)
,  "df"= test$parameter
,  "p.value" = sprintf("%.3f", test$p.value)
)
return(out)
})
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
d <- melt(mtcars)
View(d)
pairwise.t.test(d$value, d$variable, p.adjust = "none")
t.test(mpg~cyl)
t.test(data = mtcart,mpg~cyl)
pairwise.t.test(d$value, d$variable, p.adjust = "bon")
t.test(data = mtcart,mpg~cyl, mu = 0)
t.test(data = mtcars,mpg~cyl, mu = 0)
t.test(mtcars$mpg,mtcars$cyl, mu = 0)
t.test(data = mtcars,mpg,cyl, mu = 0)
t.test(data = mtcars,x = mpg,y = cyl, mu = 0)
t.test(data = mtcars,x = mpg,x = cyl, mu = 0)
t.test(mtcars$mpg,mtcars$cyl, mu = 0)
paired.t.test(mtcars$mpg,mtcars$cyl, mu = 0)
pairwise.t.test(mtcars$mpg,mtcars$cyl, mu = 0)
pairwise.t.test(mtcars$mpg,mtcars$am, mu = 0)
pairwise.t.test(mtcars$mpg,mtcars$carb)
pairwise.t.test(mtcars$mpg,mtcars$am)
?p.adjust.method
pairwise.t.test(d$value, d$variable, p.adjust = "none",p.adjust.method = ())
pairwise.t.test(d$value, d$variable, p.adjust = "none",p.adjust.method = "holm"
pairwise.t.test(d$value, d$variable, p.adjust = "none",p.adjust.method = "holm")
pairwise.t.test(d$value, d$variable, p.adjust = "none")
p <-pairwise.t.test(d$value, d$variable, p.adjust = "none")
pairwise.t.test(mtcars$mpg,mtcars$cyl)
t.test(mtcars$mpg,mtcars$cyl)
pairwise.t.test(d$value, d$variable, p.adjust = "bon")
p <-pairwise.t.test(d$value, d$variable, p.adjust = "none")
t.test(mtcars$mpg,mtcars$cyl)
p <-pairwise.t.test(d$value, d$variable, p.adjust = "bonferroni")
p
p <-pairwise.t.test(d$value, d$variable, p.adjust = "holm")
p
p <-pairwise.t.test(d$value, d$variable, p.adjust = "BY")
p
p <-pairwise.t.test(d$value, d$variable, p.adjust = "none")
p
p <-pairwise.t.test(d$value, d$variable, p.adjust = "none",paired = TRUE)
p
t.test(mtcars$mpg,mtcars$qsec)
p <-pairwise.t.test(d$variable, p.adjust = "none",paired = TRUE)
pairwise.t.test(mtcars$mpg,mtcars$qsec)
p <-pairwise.t.test(d$value, d$variable, p.adjust = "none",paired = TRUE, pool.sd = FALSE)
p
p <-pairwise.t.test(d$value, d$variable, p.adjust = "none",paired = TRUE, pool.sd = TRUE)
p
p <-pairwise.t.test(d$value, d$variable, p.adjust = "none",paired = TRUE, pool.sd = FALSE)
p
pairwise.t.test(mtcars$wt,mtcars$drat)
t.test(mtcars$wt,mtcars$drat)
t.test(mtcars$mpg)
pairwise.t.test(d$value~ d$variable, p.adjust = "bon")
cor(mtdata)
cor(mtcars)
install.packages("Hmisc")
library(Hmisc)
rcorr(as.matrix(mtcars),type = "Pearson")
rcorr(as.matrix(mtcars),type = "pearson")
rcorr(as.matrix(mtcars[,1:10]),type = "pearson")
rcorr(as.matrix(mtcars[,1:10]),type = "pearson")
rcorr(as.matrix(mtcars[,1:10]),as.matrix(mtcars[1:10,])type = "pearson")
rcorr(as.matrix(mtcars),type = "pearson", p.adjust ="none")
p
rcorr(as.matrix(mtcars),type = "pearson")
library(Hmisc)
rcorr(as.matrix(mtcars),type = "pearson")
p
cor(mtcars)
# obliczam wartość
cor.test(mtcars)
# obliczam wartość krytyczną współczynnika korelacji r
cor.test(mtcars)
# obliczam wartość krytyczną współczynnika korelacji r
cor.test(mtcars, y = mpg)
corrmatrix <-rcorr(as.matrix(mtcars),type = "pearson") # Sprawdzam korelacje pomiędzy zmiennymi oraz badam poziom istotności korelacji
# obliczam wartość krytyczną współczynnika korelacji r = 0,378
cor.test(mtcars, y = mpg)
corrmatrix
?corr
??corr
corr.test(mtcars)
corr(X,y)
library(Hmisc)
corr(mtcars,mpg, cyl)
rcorr(mtcars,mpg, cyl)
shapiro.test(mtcars)
shapiro.test(mtcars$mpg)
rcorr(mtcars,mpg, cyl)
rcorr(data = mtcars,mpg, cyl)
lm(data = mtcars, mpg ~ cyl)
View(corrmatrix)
View(mtcars)
lm(data = mtcars, mpg ~ cyl,disp)
pairs(mtcars)
pairs(mtcars[,1:7])
pairs(mtcars[,1:7 -c(cyl)])
pairs(mtcars[,1:7, -c(cyl)])
pairs(mtcars[,1:7 -2])
pairs(mtcars[,c(1,3:7)])
summary(mtcars)
str(mtcars)
head(mtcars)
lm(data = mtcars, mpg~ disp + hp + drat +wt+qsec)
library(Hmisc)
#dobieramy zmienne do modelu ekonometrycznego
corrmatrix <-rcorr(as.matrix(mtcars),type = "pearson") # Sprawdzam korelacje pomiędzy zmiennymi oraz badam poziom istotności korelacji
lm(data = mtcars, mpg~ disp )
+ hp + drat +wt+qsec
lm(data = mtcars, mpg~ disp + hp + drat +wt+qsec)
lm1 <- lm(data = mtcars, mpg~ disp + hp + drat +wt+qsec)
summary(lm1)
lm1 <- lm(data = mtcars, mpg~ hp + drat +wt+qsec)
summary(lm1)
disp +
lm1 <- lm(data = mtcars, mpg~ disp + hp + drat +wt+qsec)
lm1 <- lm(data = mtcars, mpg~ disp + hp + drat +wt+qsec)
summary(lm1)
head(mtcars)
pairs(mtcars)  # sprawdzam jak przedstawiają sie zmienne na wykresach
pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe
summary(mtcars)
pairs(mtcars)  # sprawdzam jak przedstawiają sie zmienne na wykresach
pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko ciągłe
pairs(mtcars)  # sprawdzam jak przedstawiają sie wszystkie zmienne na wykresach
head(mtcars) # wyświetlam pierwszych rekordów
str(mtcars)
subset(mtcars, mpg < 15)
economy_cars <-subset(mtcars, mpg < 15) # W poszukiwaniu ekonomicznego auta
abline(pairs(mtcars[,c(1,3:7)])) # wyłączam zmienne skokowe, wybieram tylko ciągłe
abline(pairs(mtcars[,c(1,3:7)])) # wyłączam zmienne skokowe, wybieram tylko ciągłe
pairs(mtcars)  # sprawdzam jak przedstawiają sie wszystkie zmienne na wykresach
economy_cars <-subset(mtcars, mpg < 15) # W poszukiwaniu ekonomicznego auta szukam takiego który najmniej spala paliwa
View(economy_cars)
table(mtcars$am)
pie(pairs(mtcars[,c(1,3:7)])) # wyłączam zmienne skokowe, wybieram tylko ciągłe
#dobieramy zmienne do modelu ekonometrycznego
corrmatrix <-rcorr(as.matrix(mtcars),type = "pearson") # Sprawdzam korelacje pomiędzy zmiennymi oraz badam poziom istotności korelacji
library(Hmisc)
rcorr(data = mtcarsmpg, cyl)
rcorr(data = mtcars,mpg, cyl)
rcorr(mtcars$mpg, mtcars$cyl)
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko ciągłe
# Z perspektywy użytkownika pojazdu zamierzam sprawdzić wpływ czynników na przejechaną milę na jednym galonie (mpg)
# na pierwszy rzut oka mogę dostrzec kolrelacje między przejechanymi (mpg) a ilością cylindrów,koniami
# mechanicznymi oraz wagą pojazdu. Zmienna drat też może być skorelowana. nie widać korelacji między mpg a qsec
# w dalszej części będą analizowane korelacje szczegółowo
pie(v1)
summary(mtcars) # krótke statystyki dotyczące zmiennych
hist(mtcars$mpg)
plot(mpg ~ am)
plot(mpg ~ am , data = mtcars)
boxplot(mpg ~ am , data = mtcars)
boxplot(mpg ~ am + cyl , data = mtcars)
tapply(mtcars$mpg, mtcars$am, summary)
tapply(mtcars$mpg, mtcars$am, sd)
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko ciągłe
abline(v1)
summary(mtcars) # krótke statystyki dotyczące zmiennych
abline()
hist(mtcars$mpg)
abline(v1)
pairs(mtcars)  # sprawdzam jak przedstawiają sie wszystkie zmienne na wykresach
boxplot(mtcars)
boxplot(pairs(mtcars))
aggregate(mpg ~ am,data = mtcars, summary) # przedstawiam podstawowe statystyki spalania paliwa z podziałem na rodzaj skrzyni biegów
aggregate(mpg ~ am+gear,data = mtcars, summary) # przedstawiam podstawowe statystyki spalania paliwa z podziałem na rodzaj skrzyni biegów
# Wszystkie zarówno średnia i mediana wskazują, że samochody posiadające automatyczną skrzynie biegów spalają mniej paliwa w badanej próbie
aggregate(mpg ~ am+gear,data = mtcars, legth)
# Wszystkie zarówno średnia i mediana wskazują, że samochody posiadające automatyczną skrzynie biegów spalają mniej paliwa w badanej próbie
aggregate(mpg ~ am+gear,data = mtcars, length)
aggregate(mpg ~ am,data = mtcars, summary) # przedstawiam podstawowe statystyki spalania paliwa z podziałem na rodzaj skrzyni biegów
#dobieramy zmienne do modelu
corrmatrix <-rcorr(as.matrix(mtcars),type = "pearson") # Sprawdzam korelacje pomiędzy zmiennymi oraz badam poziom istotności korelacji
corrmatrix
corrmatrix
aggregate(mpg ~ am,data = mtcars, summary) # przedstawiam podstawowe statystyki spalania paliwa z podziałem na rodzaj skrzyni biegów
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko numeryczne
rcorr(mtcars$mpg, mtcars$cyl)
library(Hmisc)
rcorr(mtcars$mpg, mtcars$cyl)
#analizuje korelacje wszystkich oddziaływujących na siebie zmiennych
corrmatrix <-rcorr(as.matrix(mtcars),type = "pearson") # Sprawdzam korelacje pomiędzy zmiennymi oraz badam poziom istotności korelacji między nimi
corrmatrix
View(economy_cars)
lm1 <- lm(data = mtcars, mpg~ disp + hp + drat +wt+qsec)
summary(lm1)
shapiro.test(mtcars$mpg)
rcorr(mtcars$mpg, mtcars$cyl)
pairs(mtcars)  # sprawdzam jak przedstawiają sie wszystkie zmienne na wykresach
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko numeryczne
# Z perspektywy użytkownika pojazdu zamierzam sprawdzić wpływ czynników na przejechaną milę na jednym galonie (mpg)
# na pierwszy rzut oka mogę dostrzec kolrelacje między przejechanymi (mpg) a ilością cylindrów,koniami
# mechanicznymi oraz wagą pojazdu. Zmienna drat też może być skorelowana. nie widać korelacji między mpg a qsec
# w dalszej części będą analizowane korelacje szczegółowo
v1
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko numeryczne
# Z perspektywy użytkownika pojazdu zamierzam sprawdzić wpływ czynników na przejechaną milę na jednym galonie (mpg)
# na pierwszy rzut oka mogę dostrzec kolrelacje między przejechanymi (mpg) a ilością cylindrów,koniami
# mechanicznymi oraz wagą pojazdu. Zmienna drat też może być skorelowana. nie widać korelacji między mpg a qsec
# w dalszej części będą analizowane korelacje szczegółowo
v1
v1 <-pairs(mtcars[,c(1,3:7)])
library(Hmisc)
library(Hmisc)
str(mtcars) # sprawdzam z jakimi zmiennymi mam doczynienia
head(mtcars) # wyświetlam pierwszych rekordów
pairs(mtcars)  # sprawdzam jak przedstawiają sie wszystkie zmienne na wykresach
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko numeryczne
# Wszystkie zarówno średnia i mediana wskazują, że samochody posiadające automatyczną skrzynie biegów spalają mniej paliwa w badanej próbie
tapply(mtcars$mpg, mtcars$am, sd) # przeciętne odchylenie mpg od średniej dla automatycznej skrzyni biegów wynosi ok 3,8 , dla manualnej ok 6,1
aggregate(mpg ~ am,data = mtcars, summary) # przedstawiam podstawowe statystyki spalania paliwa z podziałem na rodzaj skrzyni biegów
pairs(mtcars)  # sprawdzam jak przedstawiają sie wszystkie zmienne na wykresach
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko numeryczne
# Z perspektywy użytkownika pojazdu zamierzam sprawdzić wpływ czynników na przejechaną milę na jednym galonie (mpg)
# na pierwszy rzut oka mogę dostrzec kolrelacje między przejechanymi (mpg) a ilością cylindrów,koniami
# mechanicznymi oraz wagą pojazdu. Zmienna drat też może być skorelowana. nie widać korelacji między mpg a qsec
# w dalszej części będą analizowane korelacje szczegółowo
abline(
)
# Z perspektywy użytkownika pojazdu zamierzam sprawdzić wpływ czynników na przejechaną milę na jednym galonie (mpg)
# na pierwszy rzut oka mogę dostrzec kolrelacje między przejechanymi (mpg) a ilością cylindrów,koniami
# mechanicznymi oraz wagą pojazdu. Zmienna drat też może być skorelowana. nie widać korelacji między mpg a qsec
# w dalszej części będą analizowane korelacje szczegółowo
abline()
?mtcars
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko numeryczne
aggregate(mpg ~ am,data = mtcars, summary) # przedstawiam podstawowe statystyki spalania paliwa z podziałem na rodzaj skrzyni biegów
economy_cars <-subset(mtcars, mpg < 15) # W poszukiwaniu najmniej ekonomicznego auta szukam takiego który najmniej spala paliwa
economy_cars
pairs(mtcars)  # sprawdzam jak przedstawiają sie wszystkie zmienne na wykresach
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko numeryczne
pairs(mtcars)  # sprawdzam jak przedstawiają sie wszystkie zmienne na wykresach
v1 <-pairs(mtcars[,c(1,3:7)]) # wyłączam zmienne skokowe, wybieram tylko numeryczne
#analizuje korelacje wszystkich oddziaływujących na siebie zmiennych
corrmatrix <-rcorr(as.matrix(mtcars),type = "pearson") # Sprawdzam korelacje pomiędzy zmiennymi oraz badam poziom istotności korelacji między nimi
corrmatrix
aggregate(mpg ~ am,data = mtcars, summary) # przedstawiam podstawowe statystyki spalania paliwa z podziałem na rodzaj skrzyni biegów
economy_cars <-subset(mtcars, mpg < 15) # W poszukiwaniu najmniej ekonomicznego auta szukam takiego który najmniej spala paliwa
View(economy_cars)
shapiro.test(mtcars$mpg)
install.packages('R0CR')
install.packages('titanic')
library(R0CR)
library(titanic)
install.packages('R0CR')
library(R0CR)
version
?titanic_train
install.packages('ROCR')
library(ROCR)
data("titanic_train")
?titanic_train
library(titanic)
data("titanic_train")
install.packages('titanic')
library(titanic)
library(ROCR)
head(titanic)
data("titanic_train")
head(titanic_train)
str(titanic_train)
summary(titanic_train)
[c("Survived","Sex","Age","Pclass")]
titanic_data <- titanic_train[c("Survived","Sex","Age","Pclass")]
